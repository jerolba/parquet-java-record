plugins {
    id 'java'
    id 'java-library'    
    id 'jacoco'
	id 'checkstyle'
    id 'maven-publish'
    id 'signing'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
	implementation project(':avro-record')
	api 'org.apache.parquet:parquet-common:1.12.3'
	api 'org.apache.parquet:parquet-column:1.12.3'
    api 'org.apache.parquet:parquet-hadoop:1.12.3'
	implementation 'org.apache.parquet:parquet-avro:1.12.3'
	compileOnly 'org.apache.hadoop:hadoop-client:3.3.2'
	implementation('org.apache.hadoop:hadoop-mapreduce-client-core:3.3.2') {
        exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-client'
        exclude group: 'org.apache.hadoop', module: 'hadoop-yarn-common'
        exclude group: 'org.apache.hadoop', module: 'hadoop-hdfs-client'
        exclude group: 'com.google.inject.extensions', module: 'guice-servlet'
        exclude group: 'io.netty', module: 'netty'
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
        exclude group: 'javax.ws.rs', module: 'javax.ws.rs-api'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.apache.avro', module: 'avro'
    }
    
    api('org.apache.hadoop:hadoop-common:3.3.2') {
        exclude group: 'org.apache.curator', module: 'curator-recipes'
        exclude group: 'org.apache.kerby', module: 'kerb-core'
        exclude group: 'org.apache.avro', module: 'avro'
        exclude group: 'org.apache.curator', module: 'curator-client'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'org.apache.hadoop', module: 'hadoop-auth'
        exclude group: 'org.apache.hadoop', module: 'hadoop-annotations'
        exclude group: 'org.apache.hadoop.thirdparty', module: 'hadoop-shaded-protobuf_3_7'
        exclude group: 'org.apache.commons', module: 'commons-configuration2'
        exclude group: 'org.apache.commons', module: 'commons-text'
        exclude group: 'org.apache.commons', module: 'commons-math3'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'org.apache.zookeeper', module: 'zookeeper'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'org.eclipse.jetty', module: 'jetty-server'
        exclude group: 'org.eclipse.jetty', module: 'jetty-servlet'
        exclude group: 'org.eclipse.jetty', module: 'jetty-webapp'
        exclude group: 'org.eclipse.jetty', module: 'jetty-util'
        exclude group: 'javax.servlet', module: 'javax.servlet-api'
        exclude group: 'javax.servlet.jsp', module: 'jsp-api'
        exclude group: 'com.sun.jersey', module: 'jersey-json'
        exclude group: 'com.sun.jersey', module: 'jersey-core'
        exclude group: 'com.sun.jersey', module: 'jersey-servlet'
        exclude group: 'com.sun.jersey', module: 'jersey-server'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'commons-net', module: 'commons-net'
        exclude group: 'commons-cli', module: 'commons-cli'
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'commons-pool', module: 'commons-pool'
        exclude group: 'com.jcraft', module: 'jsch'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'dnsjava', module: 'dnsjava'
        exclude group: 'log4j', module: 'log4j'
    }
	
	testImplementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
}


test {
    useJUnitPlatform()
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'com.jerolba'
            artifactId 'parquet-record'
            version version

            from components.java

            artifact sourceJar
            artifact javadocJar
        }
    }
    if (project.hasProperty('sonatypeUsername')){
	    repositories {
	        maven {
	            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
	            //url 'https://oss.sonatype.org/content/repositories/snapshots/'
	            credentials {
	                username sonatypeUsername
	                password sonatypePassword
	            }
	        }
	    }    
    } else {
		println 'No sonatype configuration found. Expected user and password at $HOME/.gradle/gradle.properties file.'    	
    }    
}

signing {
    sign publishing.publications.mavenJava
}


def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description 'Parquet Record serialize/deserialize Parquet files using Java Records'
            name 'Parquet Record'
            url 'https://github.com/jerolba/parquet-java-record'
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/jerolba/parquet-java-record'
                connection 'scm:git:git://github.com/jerolba/parquet-java-record'
                developerConnection 'scm:git:ssh://github.com:jerolba/parquet-java-record'
            }
            developers {
                developer {
                    id 'jerolba'
                    name 'Jerónimo López'
                }
            }
        }
    }
}

// }
